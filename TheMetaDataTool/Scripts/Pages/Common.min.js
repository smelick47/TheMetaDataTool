(function (e, t) { e.Languages = { 1078: "Afrikaans - South Africa", 1052: "Albanian - Albania", 1156: "Alsatian", 1118: "Amharic - Ethiopia", 1025: "Arabic - Saudi Arabia", 5121: "Arabic - Algeria", 15361: "Arabic - Bahrain", 3073: "Arabic - Egypt", 2049: "Arabic - Iraq", 11265: "Arabic - Jordan", 13313: "Arabic - Kuwait", 12289: "Arabic - Lebanon", 4097: "Arabic - Libya", 6145: "Arabic - Morocco", 8193: "Arabic - Oman", 16385: "Arabic - Qatar", 10241: "Arabic - Syria", 7169: "Arabic - Tunisia", 14337: "Arabic - U.A.E.", 9217: "Arabic - Yemen", 1067: "Armenian - Armenia", 1101: "Assamese", 2092: "Azeri (Cyrillic)", 1068: "Azeri (Latin)", 1133: "Bashkir", 1069: "Basque", 1059: "Belarusian", 1093: "Bengali (India)", 2117: "Bengali (Bangladesh)", 5146: "Bosnian (Bosnia/Herzegovina)", 1150: "Breton", 1026: "Bulgarian", 1109: "Burmese", 1027: "Catalan", 1116: "Cherokee - United States", 2052: "Chinese - People's Republic of China", 4100: "Chinese - Singapore", 1028: "Chinese - Taiwan", 3076: "Chinese - Hong Kong SAR", 5124: "Chinese - Macao SAR", 1155: "Corsican", 1050: "Croatian", 4122: "Croatian (Bosnia/Herzegovina)", 1029: "Czech", 1030: "Danish", 1164: "Dari", 1125: "Divehi", 1043: "Dutch - Netherlands", 2067: "Dutch - Belgium", 1126: "Edo", 1033: "English - United States", 2057: "English - United Kingdom", 3081: "English - Australia", 10249: "English - Belize", 4105: "English - Canada", 9225: "English - Caribbean", 15369: "English - Hong Kong SAR", 16393: "English - India", 14345: "English - Indonesia", 6153: "English - Ireland", 8201: "English - Jamaica", 17417: "English - Malaysia", 5129: "English - New Zealand", 13321: "English - Philippines", 18441: "English - Singapore", 7177: "English - South Africa", 11273: "English - Trinidad", 12297: "English - Zimbabwe", 1061: "Estonian", 1080: "Faroese", 1065: "Farsi", 1124: "Filipino", 1035: "Finnish", 1036: "French - France", 2060: "French - Belgium", 11276: "French - Cameroon", 3084: "French - Canada", 9228: "French - Democratic Rep. of Congo", 12300: "French - Cote d'Ivoire", 15372: "French - Haiti", 5132: "French - Luxembourg", 13324: "French - Mali", 6156: "French - Monaco", 14348: "French - Morocco", 58380: "French - North Africa", 8204: "French - Reunion", 10252: "French - Senegal", 4108: "French - Switzerland", 7180: "French - West Indies", 1122: "Frisian - Netherlands", 1127: "Fulfulde - Nigeria", 1071: "FYRO Macedonian", 1110: "Galician", 1079: "Georgian", 1031: "German - Germany", 3079: "German - Austria", 5127: "German - Liechtenstein", 4103: "German - Luxembourg", 2055: "German - Switzerland", 1032: "Greek", 1135: "Greenlandic", 1140: "Guarani - Paraguay", 1095: "Gujarati", 1128: "Hausa - Nigeria", 1141: "Hawaiian - United States", 1037: "Hebrew", 1081: "Hindi", 1038: "Hungarian", 1129: "Ibibio - Nigeria", 1039: "Icelandic", 1136: "Igbo - Nigeria", 1057: "Indonesian", 1117: "Inuktitut", 2108: "Irish", 1040: "Italian - Italy", 2064: "Italian - Switzerland", 1041: "Japanese", 1158: "K'iche", 1099: "Kannada", 1137: "Kanuri - Nigeria", 2144: "Kashmiri", 1120: "Kashmiri (Arabic)", 1087: "Kazakh", 1107: "Khmer", 1159: "Kinyarwanda", 1111: "Konkani", 1042: "Korean", 1088: "Kyrgyz (Cyrillic)", 1108: "Lao", 1142: "Latin", 1062: "Latvian", 1063: "Lithuanian", 1134: "Luxembourgish", 1086: "Malay - Malaysia", 2110: "Malay - Brunei Darussalam", 1100: "Malayalam", 1082: "Maltese", 1112: "Manipuri", 1153: "Maori - New Zealand", 1146: "Mapudungun", 1102: "Marathi", 1148: "Mohawk", 1104: "Mongolian (Cyrillic)", 2128: "Mongolian (Mongolian)", 1121: "Nepali", 2145: "Nepali - India", 1044: "Norwegian (Bokmål)", 2068: "Norwegian (Nynorsk)", 1154: "Occitan", 1096: "Oriya", 1138: "Oromo", 1145: "Papiamentu", 1123: "Pashto", 1045: "Polish", 1046: "Portuguese - Brazil", 2070: "Portuguese - Portugal", 1094: "Punjabi", 2118: "Punjabi (Pakistan)", 1131: "Quecha - Bolivia", 2155: "Quecha - Ecuador", 3179: "Quecha - Peru", 1047: "Rhaeto-Romanic", 1048: "Romanian", 2072: "Romanian - Moldava", 1049: "Russian", 2073: "Russian - Moldava", 1083: "Sami (Lappish)", 1103: "Sanskrit", 1084: "Scottish Gaelic", 1132: "Sepedi", 3098: "Serbian (Cyrillic)", 2074: "Serbian (Latin)", 1113: "Sindhi - India", 2137: "Sindhi - Pakistan", 1115: "Sinhalese - Sri Lanka", 1051: "Slovak", 1060: "Slovenian", 1143: "Somali", 1070: "Sorbian", 3082: "Spanish - Spain (Modern Sort)", 1034: "Spanish - Spain (Traditional Sort)", 11274: "Spanish - Argentina", 16394: "Spanish - Bolivia", 13322: "Spanish - Chile", 9226: "Spanish - Colombia", 5130: "Spanish - Costa Rica", 7178: "Spanish - Dominican Republic", 12298: "Spanish - Ecuador", 17418: "Spanish - El Salvador", 4106: "Spanish - Guatemala", 18442: "Spanish - Honduras", 22538: "Spanish - Latin America", 2058: "Spanish - Mexico", 19466: "Spanish - Nicaragua", 6154: "Spanish - Panama", 15370: "Spanish - Paraguay", 10250: "Spanish - Peru", 20490: "Spanish - Puerto Rico", 21514: "Spanish - United States", 14346: "Spanish - Uruguay", 8202: "Spanish - Venezuela", 1072: "Sutu", 1089: "Swahili", 1053: "Swedish", 2077: "Swedish - Finland", 1114: "Syriac", 1064: "Tajik", 1119: "Tamazight (Arabic)", 2143: "Tamazight (Latin)", 1097: "Tamil", 1092: "Tatar", 1098: "Telugu", 1054: "Thai", 2129: "Tibetan - Bhutan", 1105: "Tibetan - People's Republic of China", 2163: "Tigrigna - Eritrea", 1139: "Tigrigna - Ethiopia", 1073: "Tsonga", 1074: "Tswana", 1055: "Turkish", 1090: "Turkmen", 1152: "Uighur - China", 1058: "Ukrainian", 1056: "Urdu", 2080: "Urdu - India", 2115: "Uzbek (Cyrillic)", 1091: "Uzbek (Latin)", 1075: "Venda", 1066: "Vietnamese", 1106: "Welsh", 1160: "Wolof", 1076: "Xhosa", 1157: "Yakut", 1144: "Yi", 1085: "Yiddish", 1130: "Yoruba", 1077: "Zulu", 1279: "HID (Human Interface Device)" }; e.TemplateSaveOptions = { CustomProperties: "cp", AllLanguages: "alterms" }; e.createChildTermsOptions = { NewGuid: "NG" } })(window.enums = window.enums || {}); (function (e, t) { e.TermGroupName = "eAuction100"; e.TermGroupNameGuid = "8DD59EC6-E8A8-4DFA-A50C-7A6F333B1696"; e.TermCategorySetName = "Categories"; e.TermCategorySetGuid = "E7B5CB52-241B-4C2C-93E0-A2E8A1823E6D"; e.L = function () { }; e.L.Configs = { C: { Id: "Id", Title: "Title", ConfigItem: "ConfigItem" }, Nm: "Configs" }; e.L.LogData = { C: { Id: "Id", Title: "Title" }, Nm: "LogData" }; e.L.Export = { C: { Id: "Id", Title: "Title", ExportData: "ExportData", ExportLog: "ExportLog", Created: "Created" }, Nm: "Export", Q: { getAllExports: "?$select=Id,Title,Created", getExportById: function (e) { return "?$select=Id,ExportData&$filter= Id eq " + e } } }; e.L.Templates = { C: { Id: "Id", Title: "Title", TemplateType: "TemplateType", TemplateData: "TemplateData", TemplateLog: "TemplateLog" }, Nm: "Templates", Q: { getAllTemplates: "?$select=Id,Title,TemplateType", getTemplatesForType: function (e) { return "?$select=Id,Title,TemplateType&$filter= TemplateType eq '" + e + "'" }, getTemplateById: function (e) { return "?$select=Id,TemplateData&$filter= Id eq " + e } } }; e.Info_SelectTerm = "Term should be selected to perform the operation."; e.Info_SelectItem = "Please select a item to perform the operation."; e.Info_Saved = "Saved."; e.Info_ValueCannotbeEmpty = "Value can not be empty."; e.Msgs = { Error_Title: "Error" }; e.String = { Info: { NoItems: "No Items available", DoNotCloseBrowser: "Do not close the browser or refresh ", Exportinprogress: "Export in progress", TemplateSaveSuccess: "Template successfully saved.", ExportSaveSuccess: "Successfully exported." }, Err: { OperationFailed: "Operation has failed. Please try again later." }, Dlg: { Title_Error: "Error", Title_General: "The MetaData Tool", EnterTemplateName: "Template Name :", EnterName: "Name :" } }; e.Error_Connection = "Sharepoint server connecting issue. Make you have correct permision or Please wait a short time before trying."; e.Error_General = "Task can not be completed. Please refresh the browser or contact your administrator."; e.Error_Reshesh = "Error on getting data. Please refresh the browser"; e.Error_AppInitialization = "App instalation failed. You may not have sufficient permission. Please refresh to retry"; e.DeleteConfirmation = "Are you sure want to Delete ?"; e.OperationFailed = "Operation has failed. Please try again later."; e.OperationFailedCheckLog = "Operation has failed. Please check the log file and try again."; e.ExportOperationSuccess = "Successfully exported. You can find the log and exported data in lists."; e.ImportOperationSuccess = "Successfully Imported."; e.Error_UnauthorizedAccess = "Access denied. Please contact your administrator."; e.ImportPleaseSelect = "Please select exported data item" })(window.defs = window.defs || {}); (function (e, t, n) { e.goTo = function (e, t) { var n = $$.getAppWebUrlUrl() + "/" + e; utils.redirectTo(n, t) }; e.getRedirectUrl = function (e, t) { var n = $$.getAppWebUrlUrl() + "/" + e; return utils.getredirectUrl(n, t) }; e.getImageUrl = function (e) { return $$.getAppWebUrlUrl() + "/Images/" + e }; e.waitUIProcess = function () { t.unblockUI(); var e = '<img src="' + $$.getAppWebUrlUrl() + '/Images/Loading.gif" />'; t.blockUI({ message: e, css: { color: "#fff", backgroundColor: "none", border: "0" }, showOverlay: false }) }; e.waitUIProcesswithElement = function (e) { var n = '<img src="' + $$.getAppWebUrlUrl() + '/Images/Loading.gif" />'; t(e).block({ message: n, css: { color: "#fff", backgroundColor: "none", border: "0" }, showOverlay: false }) }; e.waitUILongProcess = function () { t.unblockUI(); var e = '<img src="' + $$.getAppWebUrlUrl() + '/Images/init.gif" /> <h1>Just a moment...</h1>'; t.blockUI({ message: e, css: { color: "#fff", padding: "10px" } }) }; e.waitUIElement = function (e) { t(e).block({ message: null, overlayCSS: { backgroundColor: "#d3d3d3" } }) }; e.donewaitElement = function (e) { t(e).unblock() }; e.doneWaiting = function () { t.unblockUI() }; e.loader = function (e, n, r) { if (t("#" + r).length == 0) { var i = '<img id="' + r + '" class="' + n + '" src="' + $$.getAppWebUrlUrl() + '/Images/Loading.gif" />'; t(e).append(i) } }; e.removeloader = function (e) { t(e).remove() }; e.AddtoSuiteBar = function (e, n, r, i, s) { var o = '<span id="@id"><a title="@title" href="#" onclick="@onclick" style="display:inline-block;height:30px;width:30px;"><span style="display:inline-block;overflow:hidden;height:16px;width:16px;padding-left:7px;padding-top:7px;padding-right:7px;padding-bottom:7px;"><span style="height:16px;width:16px;position:relative;display:inline-block;overflow:hidden;" class="s4-clust"><img src="@img" style="@imgpos" alt="@alttitle"></span></span></a></span>'; if (e) { o = o.replace("@id", e) } if (n) { o = o.replace("@title", n); o = o.replace("@alttitle", n) } if (r) { o = o.replace("@img", r) } if (s) { o = o.replace("@onclick", s) } else { o = o.replace("@onclick", "") } if (i) { o = o.replace("@imgpos", i) } t("#suiteBarButtons").prepend(o) }; e.addToTabRowRight = function (e, n, r, i, s, o, u) { var a = '<a onclick="@onclick" id="@id" title="@msg" class="ms-promotedActionButton" href="@href" style="display:inline-block;"><span style="height:16px;width:16px;position:relative;display:inline-block;overflow:hidden;" class="s4-clust ms-promotedActionButton-icon"><img src="@img" alt="@title" style="vertical-align: top;@imgpos" ></span><span class="ms-promotedActionButton-text">@alttitle</span></a>'; if (e) { a = a.replace("@id", e) } if (o) { a = a.replace("@onclick", o) } else { a = a.replace("@onclick", "") } if (n) { a = a.replace("@msg", n) } if (r) { a = a.replace("@title", r); a = a.replace("@alttitle", r) } if (s) { a = a.replace("@href", s) } else { a = a.replace("@href", "") } if (i) { a = a.replace("@img", i) } if (u) { a = a.replace("@imgpos", u) } t("#RibbonContainer-TabRowRight").prepend(a) }; e.parseSPException = function (e) { var t = ""; var n = ""; try { n = e.get_message(); t = e.get_errorTypeName() } catch (r) { t = "General" } switch (t) { case "System.UnauthorizedAccessException": return defs.Error_UnauthorizedAccess; case "Microsoft.SharePoint.Taxonomy.TermStoreOperationException": return n; case "System.ArgumentException": return n; default: return defs.Error_General } } })(window.handeler = window.handeler || {}, jQuery); (function (e, t, n) { e.TreeItem = function () { this.Id = ""; this.text = ""; this.state = "open"; this.checked = false; this.attributes = {}; this.children = []; this.iconCls = "icon-treeNode" }; e.TreeItem.State = { Open: "open", Close: "closed" }; e.TreeItem.Attributes = { onServer: "onServer", isGroup: "Group", isTermStore: "Store", isTermSet: "TermSet", isTerm: "Term", GroupID: "GroupID", TermSetID: "TermSetID" }; e.PropertyData = function () { this.total = 0; this.rows = [] }; e.PropertyData.prototype.addRow = function (e, t, n, r) { var i = { name: e, value: t, group: n, editor: r }; this.rows.push(i); this.total = this.total + 1 }; e.PropertyData.prototype.getRow = function (e, t, n, r) { return { name: e, value: t, group: n, editor: r } }; e.GridData = function () { this.total = 0; this.rows = [] }; e.GridData.prototype.addRow = function (e) { this.rows.push(e); this.total = this.total + 1 }; e.TS = function () { this.v = null; this.i = null; this.n = null; this.l = null; this.dl = null; this.g = [] }; e.G = function () { this.i = null; this.x = null; this.d = null; this.s = [] }; e.S = function () { this.i = null; this.x = null; this.t = [] }; e.T = function () { this.i = null; this.x = null; this.d = null; this.a = null; this.t = []; this.w = []; this.y = []; this.z = [] }; e.P = function () { this.n = null; this.v = null }; e.SP = function () { this.n = null; this.v = null }; e.OL = function () { this.c = null; this.v = null; this.d = false }; e.Template = function () { this.Type = ""; this.dl = ""; this.l = []; this.Data = new e.TS; this.v = ""; this.Name = "" }; e.Template.Type = { TermStore: "Term Store", Group: "Group", TermSet: "Term Set", Term: "Term" } })(window.mapers = window.mapers || {}, jQuery)